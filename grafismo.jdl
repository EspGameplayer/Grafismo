entity Broadcast {
	miscData String
}

entity Team {
	name String required
    abb String required
    graphicsName String
	shortName String
	nicknames String
	establishmentDate String
    badge ImageBlob
    monocBadge ImageBlob
	details String
	miscData String
}

entity Person {
	name String
	middleName String
	surname1 String
	surname2 String
    nicknames String
	graphicsName String required
	longGraphicsName String
	callnames String
	birthDate String
	deathDate String
	mediumShotPhoto ImageBlob
	fullShotPhoto ImageBlob
	socialMedia String
	details String
	miscData String
}

entity Player {
	graphicsName String required
	longGraphicsName String
	shirtName String
    height Integer
    weight Integer
    strongerFoot Side
	preferredSide Side
	contractUntil String
	retirementDate String
	miscData String
}

entity StaffMember {
	graphicsName String required
	longGraphicsName String
	defaultRole StaffMemberRole
	contractUntil String
	retirementDate String
	miscData String
}

entity Referee {
	graphicsName String required
	longGraphicsName String
	retirementDate String
	miscData String
}

entity BroadcastPersonnelMember {
	graphicsName String required
	longGraphicsName String
	role BroadcastPersonnelMemberRole
}

entity Association {
	info String required
}

entity Venue {
	name String required
    graphicsName String
	longGraphicsName String
    capacity Integer
	openingDate String
    fieldSize String
	isArtificialGrass Integer
	address String
	geographicLocation String
	details String
	miscData String
}

entity Location {
	name String required
	graphicsName String
	population Integer
	censusYear Integer
	denonym String
}

entity Shirt {
	colour1 String pattern(/^[0-9a-f]{6}$|^$/)
	colour2 String pattern(/^[0-9a-f]{6}$|^$/)
	type Integer
	model ImageBlob
	photo ImageBlob
}

entity Match {
	moment Instant
    attendance Integer
	hashtag String
	details String
	miscData String
}

entity MatchPlayer {
	shirtNumber Integer
	isYouth Integer
    isWarned Integer
	miscData String
}

entity Lineup{
	details String
	miscData String
}

entity Formation {
	graphicsName String required
	detailedName String
	distribution String
}

entity TemplateFormation {
	name String required
}

entity TeamPlayer {
	preferredShirtNumber Integer
	isYouth Integer
	sinceDate LocalDate
	untilDate LocalDate
	miscData String
}

entity TeamStaffMember {
	role StaffMemberRole
	sinceDate LocalDate
	untilDate LocalDate
	miscData String
}

entity MatchAction {
	timestamp String
    details String
	miscData String
}

entity Sponsor {
	name String required
	graphicsName String
	logo ImageBlob
	monocLogo ImageBlob
	details String
	miscData String
}

entity Competition {
	name String required
	graphicsName String
    type CompetitionType required
    colour String pattern(/^[0-9a-fA-F]{6}$|^$/)
	regulations String
	details String
    miscData String
}

entity Matchday {
	name String required
	graphicsName String
    moment Instant
	details String
	miscData String
}

entity Deduction {
	points Integer min(0)
	moment Instant
	reason String
}

entity Suspension {
	matches Integer min(0)
	moment Instant
	reason String
}

entity Injury {
	moment Instant
	estHealingTime String
	estComebackDate Instant
	reason String
}

entity Season {
	name String required
	graphicsName String
    startDate LocalDate
    endDate LocalDate
}

entity SystemConfiguration {
	miscData String
}

entity ActionKey {
	action String required
	keys String required
}

entity Position {
	name String required
    abb String required
}

entity Country {
	name String required
	abb String required
	flag ImageBlob
	population Integer
	censusYear Integer
	denonym String
}

entity GraphicElement {
	name String required
	code String
}

enum Side {
	R ("Derecha"),
    L ("Izquierda"),
	B ("Ambas")
}

enum StaffMemberRole {
	DT ("Entrenador"), 
    DT2 ("Segundo entrenador"), 
    TEAM_DELEGATE ("Delegado del equipo"),
    MATCH_DELEGATE ("Delegado de campo"), 
    PRESIDENT ("Presidente"), 
    BOARD_MEMBER ("Miembro de la junta directiva"), 
	MEMBER ("Miembro")
}

enum BroadcastPersonnelMemberRole {
	NARRATOR ("Narrador"),
	ANALYST ("Analista"),
	COMENTATOR ("Comentarista"),
	SIDELINE_REPORTER ("Reportero a pie de campo"),
	PRODUCER ("Realizador"),
	CAMERAMAN ("Operador de c치mara")
}

enum ActionType {
	GOAL ("Gol"), 
    YC ("Amonestaci칩n"), 
    RC ("Expulsi칩n"), 
    SUB ("Sustituci칩n"), 
    PASS ("Pase"), 
    CORNER ("Saque de esquina"), 
    SHOT ("Disparo"), 
    FK ("Lanzamiento de falta"), 
    PK ("Penalti"), 
    CLEARANCE ("Despeje"), 
    TACKLE ("Entrada"), 
    FOUL ("Falta cometida"), 
    OFFSIDE ("Fuera de juego"), 
    PENALTY ("Penalti cometido"),
	PERIOD_FINISH ("Fin de periodo")
}

enum CompetitionType {
	LEAGUE ("Liga"), 
	LEAGUE2 ("Liga (2p)"), 
    CUP ("Copa")
}

relationship OneToOne {
	Broadcast{match required} to Match
	Player{person(graphicsName) required} to Person
	StaffMember{person(graphicsName) required} to Person
	Referee{person(graphicsName) required} to Person
	BroadcastPersonnelMember{person(graphicsName) required} to Person
	Match{motm} to MatchPlayer{motmMatch required}
	Match{homeLineup} to Lineup{homeMatch required}
	Match{awayLineup} to Lineup{awayMatch required}
	Lineup{captain} to MatchPlayer{captainLineup}
	TemplateFormation{formation(graphicsName) required} to Formation
	SystemConfiguration{currentSeason(name)} to Season
	ActionKey{graphicElement(name) required} to GraphicElement{keys}
}

//Former OneToMany
relationship ManyToMany {
	Lineup{matchPlayer} to MatchPlayer{lineup}
    Position{parent(abb)} to Position{child(abb)}
}

relationship ManyToOne {
	Broadcast{systemConfiguration required} to SystemConfiguration
	Team{parent(graphicsName)} to Team{child}
	Team{preferredFormation(graphicsName)} to Formation
	Team{location(graphicsName)} to Location
	Person{nationality(name)} to Country
	Person{birthplace(graphicsName)} to Location
	Referee{association(info)} to Association
	Venue{location(name)} to Location
	Shirt{team(graphicsName)} to Team
	Shirt{season(name)} to Season
	Match{homeTeam(graphicsName) required} to Team
	Match{awayTeam(graphicsName) required} to Team
	Match{venue(graphicsName)} to Venue
	Match{matchDelegate} to TeamStaffMember
	Match{homeShirt} to Shirt
	Match{awayShirt} to Shirt
	Match{matchday(name)} to Matchday
	MatchPlayer{teamPlayer required} to TeamPlayer
	TeamPlayer{team(graphicsName)} to Team
	TeamPlayer{player(graphicsName) required} to Player
	TeamStaffMember{team(graphicsName)} to Team
	TeamStaffMember{staffMember(graphicsName) required} to StaffMember
	MatchPlayer{position(abb)} to Position
	Lineup{dt} to TeamStaffMember
	Lineup{dt2} to TeamStaffMember
	Lineup{teamDelegate} to TeamStaffMember
	Lineup{formation(graphicsName)} to Formation
	MatchAction{match required} to Match
	Competition{parent(graphicsName)} to Competition{child}
	Competition{country(name)} to Country
	Matchday{competition(graphicsName)} to Competition
	Deduction{team(graphicsName) required} to Team
	Deduction{competition(graphicsName) required} to Competition
	Deduction to Match
	Suspension{person(graphicsName) required} to Person
	Suspension{competition(graphicsName) required} to Competition
	Suspension to Match
	Injury{player(graphicsName) required} to Player
	Injury to Match
	Location{country(name)} to Country
}

relationship ManyToMany {
	Broadcast{broadcastPersonnelMember (graphicsName)} to BroadcastPersonnelMember{broadcast}
	Team{venue(graphicsName)} to Venue{team}
	Player{position(abb)} to Position{player}
	Match{referee(graphicsName)} to Referee{match}
	MatchAction{matchPlayer} to MatchPlayer{action}
	Competition{team(graphicsName)} to Team{competition}
	Competition{referee(graphicsName)} to Referee{competition}
}

/* Set pagination options */
paginate * with infinite-scroll
/* paginate * with pagination */

/* Use Data Transfer Objects (DTO) */
dto * with mapstruct

// Set service options to all except few
service * with serviceClass
// service all with serviceImpl except Employee, Job

/* Set an angular suffix */
/* angularSuffix * with mySuffix */
